openapi: "3.0.3"
info:
  title: "course API"
  description: "course API"
  version: "1.0.0"
servers:
- url: "https://course"
paths:
  /v1:
    post:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /v1/course:
    post:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /v1/course/{courseId}:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Course"
    post:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
  /v1/course/{courseId}/description:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseDescription"
  /v1/course/{courseId}/join:
    post:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
  /v1/course/{courseId}/lesson:
    post:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /v1/course/{courseId}/lesson/{number}:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "number"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
    post:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "number"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /v1/course/{courseId}/lesson/{lessonNumber}/task/all:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "lessonNumber"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Task"
  /v1/course/{courseId}/lesson/all:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LessonDescription"
  /v1/course/{courseId}/score:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/course/{courseId}/score/user:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/course/{courseId}/score/user/{username}:
    get:
      description: ""
      parameters:
      - name: "courseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/lesson/{lessonId}:
    delete:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
    get:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LessonDescription"
  /v1/lesson/{lessonId}/score:
    get:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/lesson/{lessonId}/score/user:
    get:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/lesson/{lessonId}/score/user/{username}:
    get:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/lesson/{lessonId}/task:
    post:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "integer"
                format: "int64"
  /v1/lesson/{lessonId}/task/all:
    get:
      description: ""
      parameters:
      - name: "lessonId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Task"
  /v1/task/{taskId}:
    delete:
      description: ""
      parameters:
      - name: "taskId"
        in: "path"
        required: true
        schema:
          type: "string"
  /v1/task/{taskId}/score:
    get:
      description: ""
      parameters:
      - name: "taskId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
    post:
      description: ""
      parameters:
      - name: "score"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "taskId"
        in: "path"
        required: true
        schema:
          type: "string"
  /v1/task/{taskId}/score/{username}:
    get:
      description: ""
      parameters:
      - name: "taskId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
  /v1/task/{taskId}/score/user:
    get:
      description: ""
      parameters:
      - name: "taskId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "number"
                format: "double"
components:
  schemas:
    LessonDescription:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        courseId:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
    Course:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        lessons:
          type: "array"
          items:
            $ref: "#/components/schemas/LessonDescription"
    CourseDescription:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
    Task:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        lessonId:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        score:
          type: "number"
          format: "double"